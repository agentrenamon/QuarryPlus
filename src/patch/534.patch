--- a/com/yogpc/qp/APowerTile.java
+++ b/com/yogpc/qp/APowerTile.java
@@ -3,7 +3,6 @@
 import com.yogpc.mc_lib.APacketTile;
 
 import net.minecraft.nbt.NBTTagCompound;
-import net.minecraftforge.common.ForgeDirection;
 import buildcraft.api.power.IPowerReceptor;
 import buildcraft.api.power.IPowerProvider;
 import buildcraft.api.power.PowerFramework;
--- a/com/yogpc/qp/BlockBreaker.java
+++ b/com/yogpc/qp/BlockBreaker.java
@@ -21,6 +21,7 @@
 import java.util.ArrayList;
 import java.util.Random;
 
+import buildcraft.core.proxy.CoreProxy;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 import net.minecraft.block.Block;
@@ -53,6 +54,10 @@
 		this.setHardness(3.5F);
 		this.setStepSound(soundStoneFootstep);
 		this.setBlockName("BreakerPlus");
+		this.blockIndexInTexture = 96;
+		this.furnaceTopIcon = 97;
+		this.horizontal = 100;
+		this.vectrial = 101;
 	}
 
 	@Override
@@ -77,11 +82,8 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:plusstone_side");
-		this.furnaceTopIcon = par1IconRegister.registerIcon("yogpstop_qp:plusstone_top");
-		this.horizontal = par1IconRegister.registerIcon("yogpstop_qp:breaker_front_horizontal");
-		this.vectrial = par1IconRegister.registerIcon("yogpstop_qp:breaker_front_vertical");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	@Override
@@ -142,8 +144,8 @@
 
 	@Override
 	public void onBlockPlacedBy(World world, int x, int y, int z, EntityLiving ent) {
-		EnchantmentHelper.init((IEnchantableTile) world.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
-		world.setBlockMetadataWithNotify(x, y, z, BlockPistonBase.determineOrientation(world, x, y, z, ent), 2);
+		EnchantmentHelper.init((IEnchantableTile) world.getBlockTileEntity(x, y, z), ent.getHeldItem().getEnchantmentTagList());
+		world.setBlockMetadataWithNotify(x, y, z, BlockPistonBase.determineOrientation(world, x, y, z, (EntityPlayer) ent));
 	}
 
 	static void setDispenserDefaultDirection(World w, int x, int y, int z) {
--- a/com/yogpc/qp/BlockLaser.java
+++ b/com/yogpc/qp/BlockLaser.java
@@ -43,6 +43,9 @@
 		setHardness(10F);
 		setCreativeTab(QuarryPlus.ct);
 		this.setBlockName("LaserPlus");
+		this.blockIndexInTexture = 112;
+		this.textureBottom = 113;
+		this.textureTop = 114;
 	}
 
 	@Override
@@ -82,15 +85,13 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:laser_top");
-		this.textureBottom = par1IconRegister.registerIcon("yogpstop_qp:laser_bottom");
-		this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:laser_side");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	@Override
 	public void onBlockPlacedBy(World world, int x, int y, int z, EntityLiving ent) {
-		EnchantmentHelper.init((IEnchantableTile) world.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+		EnchantmentHelper.init((IEnchantableTile) world.getBlockTileEntity(x, y, z), ent.getHeldItem().getEnchantmentTagList());
 	}
 
 	private final ArrayList<ItemStack> drop = new ArrayList<ItemStack>();
--- a/com/yogpc/qp/BlockMarker.java
+++ b/com/yogpc/qp/BlockMarker.java
@@ -32,12 +32,16 @@
 import net.minecraftforge.common.ForgeDirection;
 
 public class BlockMarker extends BlockContainer {
+	private static final ForgeDirection[] m2fd = new ForgeDirection[] { ForgeDirection.DOWN, ForgeDirection.EAST, ForgeDirection.WEST, ForgeDirection.SOUTH,
+			ForgeDirection.NORTH, ForgeDirection.UP };
+	private static final byte[] s2m = new byte[] { 0, 5, 4, 3, 2, 1 };
 
 	public BlockMarker(int id) {
 		super(id, Material.circuits);
 		setLightValue(0.5F);
 		setCreativeTab(QuarryPlus.ct);
 		setBlockName("MarkerPlus");
+		this.blockIndexInTexture = 16;
 	}
 
 	@Override
@@ -49,7 +53,7 @@
 	public void setBlockBoundsBasedOnState(IBlockAccess world, int x, int y, int z) {
 		float w = 0.15F;
 		float h = 0.65F;
-		ForgeDirection dir = ForgeDirection.getOrientation(world.getBlockMetadata(x, y, z));
+		ForgeDirection dir = m2fd[world.getBlockMetadata(x, y, z)];
 		switch (dir) {
 		case DOWN:
 			this.setBlockBounds(0.5F - w, 1F - h, 0.5F - w, 0.5F + w, 1F, 0.5F + w);
@@ -89,13 +93,13 @@
 
 	@Override
 	public boolean canPlaceBlockOnSide(World world, int x, int y, int z, int side) {
-		ForgeDirection dir = ForgeDirection.getOrientation(side);
+		ForgeDirection dir = m2fd[side];
 		return world.isBlockSolidOnSide(x - dir.offsetX, y - dir.offsetY, z - dir.offsetZ, dir.getOpposite());
 	}
 
 	@Override
 	public int onBlockPlaced(World world, int x, int y, int z, int side, float par6, float par7, float par8, int meta) {
-		return side;
+		return s2m[side];
 	}
 
 	@Override
@@ -106,7 +110,7 @@
 
 	private void dropTorchIfCantStay(World w, int x, int y, int z) {
 		int m = w.getBlockMetadata(x, y, z);
-		if (!canPlaceBlockOnSide(w, x, y, z, m)) {
+		if (!canPlaceBlockOnSide(w, x, y, z, m2fd[m].ordinal())) {
 			dropBlockAsItem(w, x, y, z, m, 0);
 			w.setBlock(x, y, z, 0);
 		}
@@ -147,7 +151,7 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:marker");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 }
--- a/com/yogpc/qp/BlockMiningWell.java
+++ b/com/yogpc/qp/BlockMiningWell.java
@@ -44,6 +44,11 @@
 		setCreativeTab(QuarryPlus.ct);
 		setStepSound(soundStoneFootstep);
 		setBlockName("MiningWellPlus");
+		this.blockIndexInTexture = 48;
+		this.textureFront = 49;
+		this.textureBack = 50;
+		this.textureTop = 51;
+		this.texW = 52;
 	}
 
 	@Override
@@ -53,12 +58,8 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.textureFront = par1IconRegister.registerIcon("yogpstop_qp:miningwell_front");
-		this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:miningwell");
-		this.textureBack = par1IconRegister.registerIcon("yogpstop_qp:miningwell_back");
-		this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:miningwell_top");
-		this.texW = par1IconRegister.registerIcon("yogpstop_qp:miningwell_top_w");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	@Override
@@ -84,8 +85,8 @@
 	public void onBlockPlacedBy(World w, int x, int y, int z, EntityLiving el) {
 		super.onBlockPlacedBy(w, x, y, z, el);
 		ForgeDirection orientation = get2dOrientation(el.posX, el.posZ, x, z);
-		w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal(), 1);
-		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+		w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal());
+		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
 	}
 
 	private static ForgeDirection get2dOrientation(double x1, double z1, double x2, double z2) {
--- a/com/yogpc/qp/BlockMover.java
+++ b/com/yogpc/qp/BlockMover.java
@@ -34,6 +34,9 @@
 		setHardness(1.2F);
 		this.setCreativeTab(QuarryPlus.ct);
 		setBlockName("EnchantMover");
+		this.blockIndexInTexture = 32;
+		this.textureBottom = 33;
+		this.textureTop = 34;
 	}
 
 	@Override
@@ -52,10 +55,8 @@
 
 	@SideOnly(Side.CLIENT)
 	@Override
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:mover");
-		this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:mover_top");
-		this.textureBottom = par1IconRegister.registerIcon("yogpstop_qp:mover_bottom");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	@Override
--- a/com/yogpc/qp/BlockPlacer.java
+++ b/com/yogpc/qp/BlockPlacer.java
@@ -19,6 +19,7 @@
 
 import java.util.Random;
 
+import buildcraft.core.proxy.CoreProxy;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 import net.minecraft.block.Block;
@@ -53,6 +54,10 @@
 		this.setHardness(3.5F);
 		this.setStepSound(soundStoneFootstep);
 		this.setBlockName("PlacerPlus");
+		this.blockIndexInTexture = 96;
+		this.furnaceTopIcon = 97;
+		this.horizontal = 98;
+		this.vectrial = 99;
 	}
 
 	@Override
@@ -77,11 +82,8 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:plusstone_side");
-		this.furnaceTopIcon = par1IconRegister.registerIcon("yogpstop_qp:plusstone_top");
-		this.horizontal = par1IconRegister.registerIcon("yogpstop_qp:placer_front_horizontal");
-		this.vectrial = par1IconRegister.registerIcon("yogpstop_qp:placer_front_vertical");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	@Override
@@ -160,7 +162,7 @@
 
 	@Override
 	public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving) {
-		int l = BlockPistonBase.determineOrientation(par1World, par2, par3, par4, par5EntityLiving);
+		int l = BlockPistonBase.determineOrientation(par1World, par2, par3, par4, (EntityPlayer) par5EntityLiving);
 		par1World.setBlockMetadataWithNotify(par2, par3, par4, l);
 	}
 
@@ -200,7 +202,6 @@
 				}
 			}
 
-			world.func_96440_m(x, y, z, b);
 		}
 
 		super.breakBlock(world, x, y, z, b, meta);
--- a/com/yogpc/qp/BlockPump.java
+++ b/com/yogpc/qp/BlockPump.java
@@ -42,6 +42,11 @@
 		setHardness(5F);
 		setCreativeTab(QuarryPlus.ct);
 		setBlockName("PumpPlus");
+		this.textureSide = 64;
+		this.textureBottom = 65;
+		this.textureTop = 66;
+		this.texC = 67;
+		this.texW = 68;
 	}
 
 	@Override
@@ -75,12 +80,8 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:pump_top");
-		this.textureBottom = par1IconRegister.registerIcon("yogpstop_qp:pump_bottom");
-		this.textureSide = par1IconRegister.registerIcon("yogpstop_qp:pump_side");
-		this.texW = par1IconRegister.registerIcon("yogpstop_qp:pump_top_w");
-		this.texC = par1IconRegister.registerIcon("yogpstop_qp:pump_top_c");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	private final ArrayList<ItemStack> drop = new ArrayList<ItemStack>();
@@ -110,7 +111,7 @@
 	@Override
 	public void onBlockPlacedBy(World w, int x, int y, int z, EntityLiving el) {
 		super.onBlockPlacedBy(w, x, y, z, el);
-		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
 	}
 
 	@Override
--- a/com/yogpc/qp/BlockQuarry.java
+++ b/com/yogpc/qp/BlockQuarry.java
@@ -44,6 +44,12 @@
 		setStepSound(soundStoneFootstep);
 		setCreativeTab(QuarryPlus.ct);
 		setBlockName("QuarryPlus");
+		this.blockIndexInTexture = 0;
+		this.textureFront = 1;
+		this.textureTop = 2;
+		this.texNNB = 3;
+		this.texMF = 4;
+		this.texBB = 5;
 	}
 
 	private final ArrayList<ItemStack> drop = new ArrayList<ItemStack>();
@@ -107,13 +113,8 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister par1IconRegister) {
-		this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:quarry");
-		this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:quarry_top");
-		this.textureFront = par1IconRegister.registerIcon("yogpstop_qp:quarry_front");
-		this.texBB = par1IconRegister.registerIcon("yogpstop_qp:quarry_top_bb");
-		this.texNNB = par1IconRegister.registerIcon("yogpstop_qp:quarry_top_nnb");
-		this.texMF = par1IconRegister.registerIcon("yogpstop_qp:quarry_top_mf");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	@Override
@@ -125,9 +126,9 @@
 	public void onBlockPlacedBy(World w, int x, int y, int z, EntityLiving el) {
 		super.onBlockPlacedBy(w, x, y, z, el);
 		ForgeDirection orientation = get2dOrientation(el.posX, el.posZ, x, z);
-		w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal(), 1);
+		w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal());
 		((TileQuarry) w.getBlockTileEntity(x, y, z)).requestTicket();
-		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
 	}
 
 	private static ForgeDirection get2dOrientation(double x1, double z1, double x2, double z2) {
--- a/com/yogpc/qp/BlockRefinery.java
+++ b/com/yogpc/qp/BlockRefinery.java
@@ -83,10 +83,10 @@
 	@Override
 	public void onBlockPlacedBy(World w, int x, int y, int z, EntityLiving el) {
 		super.onBlockPlacedBy(w, x, y, z, el);
-		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+		EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
 		ForgeDirection[] da = { ForgeDirection.NORTH, ForgeDirection.EAST, ForgeDirection.SOUTH, ForgeDirection.WEST };
 		int di = MathHelper.floor_double((el.rotationYaw + 45.0) / 90.0) & 3;
-		w.setBlockMetadataWithNotify(x, y, z, da[di].ordinal(), 1);
+		w.setBlockMetadataWithNotify(x, y, z, da[di].ordinal());
 	}
 
 	private static void consumeItem(EntityPlayer ep, ItemStack stack) {
@@ -124,17 +124,17 @@
 			int meta = world.getBlockMetadata(x, y, z);
 			switch (ForgeDirection.values()[meta]) {
 			case WEST:
-				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.SOUTH.ordinal(), 3);
+				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.SOUTH.ordinal());
 				break;
 			case EAST:
-				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.NORTH.ordinal(), 3);
+				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.NORTH.ordinal());
 				break;
 			case NORTH:
-				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.WEST.ordinal(), 3);
+				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.WEST.ordinal());
 				break;
 			case SOUTH:
 			default:
-				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.EAST.ordinal(), 3);
+				world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.EAST.ordinal());
 				break;
 			}
 			return true;
--- a/com/yogpc/qp/ItemTool.java
+++ b/com/yogpc/qp/ItemTool.java
@@ -34,7 +34,6 @@
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.util.Icon;
 import net.minecraft.world.World;
-import net.minecraftforge.oredict.OreDictionary;
 
 public class ItemTool extends Item implements IEnchantableItem {
 	Icon ile, ils;
@@ -45,6 +44,9 @@
 		setHasSubtypes(true);
 		this.setMaxDamage(0);
 		setCreativeTab(QuarryPlus.ct);
+		this.iconIndex = 80;
+		this.ile = 81;
+		this.ils = 82;
 	}
 
 	@Override
@@ -145,10 +147,8 @@
 
 	@Override
 	@SideOnly(Side.CLIENT)
-	public void registerIcons(IconRegister ir) {
-		this.iconIndex = ir.registerIcon("yogpstop_qp:statusChecker");
-		this.ile = ir.registerIcon("yogpstop_qp:listEditor");
-		this.ils = ir.registerIcon("yogpstop_qp:liquidSelector");
+	public String getTextureFile() {
+		return "/mods/yogpstop_qp/textures/textures.png";
 	}
 
 	@Override
--- a/com/yogpc/qp/PowerManager.java
+++ b/com/yogpc/qp/PowerManager.java
@@ -36,7 +36,7 @@
 		if (c.containsKey(name)) {
 			Property prop = c.get(name);
 			if (prop.getType() == null) {
-				prop = new Property(prop.getName(), prop.getString(), Property.Type.DOUBLE);
+				prop = new Property(prop.getName(), prop.value, Property.Type.DOUBLE);
 				c.put(name, prop);
 			}
 			return prop.getDouble(def);
--- a/com/yogpc/qp/QuarryPlus.java
+++ b/com/yogpc/qp/QuarryPlus.java
@@ -41,7 +41,6 @@
 import net.minecraftforge.common.MinecraftForge;
 import net.minecraftforge.common.Property;
 import net.minecraftforge.event.world.WorldEvent;
-import net.minecraftforge.oredict.OreDictionary;
 import cpw.mods.fml.client.registry.RenderingRegistry;
 import cpw.mods.fml.common.SidedProxy;
 import cpw.mods.fml.common.Mod;
@@ -322,6 +321,8 @@
 		proxy.registerTextures();
 		PacketHandler.registerStaticHandler(TileMarker.class);
 	}
+	
+	public static final int WILDCARD_VALUE = 32767;
 
 	public static class BlockData {
 		public final String name;
--- a/com/yogpc/qp/TilePlacer.java
+++ b/com/yogpc/qp/TilePlacer.java
@@ -85,11 +85,6 @@
 	}
 
 	@Override
-	public boolean isInvNameLocalized() {
-		return false;
-	}
-
-	@Override
 	public int getInventoryStackLimit() {
 		return 64;
 	}
@@ -107,11 +102,6 @@
 	public void closeChest() {}
 
 	@Override
-	public boolean isStackValidForSlot(int i, ItemStack itemstack) {
-		return true;
-	}
-
-	@Override
 	public void readFromNBT(NBTTagCompound par1NBTTagCompound) {
 		super.readFromNBT(par1NBTTagCompound);
 		NBTTagList nbttaglist = par1NBTTagCompound.getTagList("Items");
--- a/com/yogpc/qp/TilePump.java
+++ b/com/yogpc/qp/TilePump.java
@@ -21,6 +21,7 @@
 import java.io.DataOutputStream;
 import java.util.Collection;
 import java.util.LinkedList;
+import java.util.Map.Entry;
 
 import com.google.common.io.ByteArrayDataInput;
 import com.google.common.io.ByteStreams;
@@ -134,7 +135,7 @@
 			te = this.worldObj.getBlockTileEntity(this.xCoord + fd.offsetX, this.yCoord + fd.offsetY, this.zCoord + fd.offsetZ);
 			if (te instanceof ITankContainer) {
 				for (String s : this.mapping[fd.ordinal()]) {
-					pZ = this.liquids.indexOf(LiquidDictionary.getCanonicalLiquid(s));
+					pZ = indexOf(LiquidDictionary.getLiquid(s, 0));
 					if (pZ == -1) continue;
 					fs = this.liquids.get(pZ);
 					fs.amount -= ((ITankContainer) te).fill(fd.getOpposite(), fs, true);
@@ -485,7 +486,7 @@
 		if (this.liquids.size() > 0) {
 			ret[0] = StatCollector.translateToLocal("chat.pumpcontain");
 			for (int i = 0; i < this.liquids.size(); i++) {
-				ret[i + 1] = new StringBuilder().append("    ").append(LiquidDictionary.findLiquidName(this.liquids.get(i))).append(": ")
+				ret[i + 1] = new StringBuilder().append("    ").append(findLiquidName(this.liquids.get(i))).append(": ")
 						.append(this.liquids.get(i).amount).append("mB").toString();
 			}
 		} else {
@@ -525,7 +526,7 @@
 
 	public LiquidStack drain(ForgeDirection fd, LiquidStack resource, boolean doDrain) {
 		if (resource == null) return null;
-		int index = this.liquids.indexOf(resource);
+		int index = indexOf(resource);
 		if (index == -1) return null;
 		LiquidStack fs = this.liquids.get(index);
 		if (fs == null) return null;
@@ -558,9 +559,9 @@
 			int index;
 			LiquidStack fs;
 			for (String s : this.mapping[fd.ordinal()]) {
-				fs = LiquidDictionary.getCanonicalLiquid(s);
+				fs = LiquidDictionary.getLiquid(s, 0);
 				if (fs == null) continue;
-				index = this.liquids.indexOf(fs);
+				index = indexOf(fs);
 				if (index != -1) ret.add(new LiquidTank(this.liquids.get(index), Integer.MAX_VALUE));
 				else ret.add(new LiquidTank(fs, Integer.MAX_VALUE));
 			}
@@ -590,7 +591,7 @@
 		for (String s : this.mapping[fd.ordinal()]) {
 			fs = LiquidDictionary.getLiquid(s, maxDrain);
 			if (fs == null) continue;
-			index = this.liquids.indexOf(fs);
+			index = indexOf(fs);
 			if (index == -1) continue;
 			return drain(fd, this.liquids.get(index), doDrain);
 		}
@@ -630,7 +631,7 @@
 				fs = new LiquidStack(Block.lavaStill, LiquidContainerRegistry.BUCKET_VOLUME);
 			}
 			if (fs != null) {
-				int index = this.liquids.indexOf(fs);
+				int index = indexOf(fs);
 				if (index != -1) this.liquids.get(index).amount += fs.amount;
 				else this.liquids.add(fs);
 				fs = null;
@@ -685,4 +686,16 @@
 		TileBasic tb = G_connected();
 		return tb == null ? 0 : tb.powerRequest();
 	}
+
+	private static String findLiquidName(LiquidStack fs) {
+		for (Entry<String, LiquidStack> entry : LiquidDictionary.getLiquids().entrySet())
+			if (fs.isLiquidEqual(entry.getValue())) return entry.getKey();
+		return null;
+	}
+
+	private int indexOf(LiquidStack key) {
+		for (int i = 0; i < this.liquids.size(); i++)
+			if (this.liquids.get(i).isLiquidEqual(key)) return i;
+		return -1;
+	}
 }
--- a/com/yogpc/qp/client/ClientProxy.java
+++ b/com/yogpc/qp/client/ClientProxy.java
@@ -23,6 +23,7 @@
 import com.yogpc.qp.TileQuarry;
 import com.yogpc.qp.TileRefinery;
 
+import net.minecraftforge.client.MinecraftForgeClient;
 import cpw.mods.fml.client.registry.ClientRegistry;
 import cpw.mods.fml.client.registry.RenderingRegistry;
 import cpw.mods.fml.relauncher.SideOnly;
@@ -40,5 +41,6 @@
 		RenderingRegistry.registerBlockHandler(RenderLaserBlock.INSTANCE);
 		RenderingRegistry.registerBlockHandler(RenderMarker.INSTANCE);
 		RenderingRegistry.registerBlockHandler(RenderFrame.INSTANCE);
+		MinecraftForgeClient.preloadTexture("/mods/yogpstop_qp/textures/textures.png");
 	}
 }
--- a/com/yogpc/qp/client/GuiError.java
+++ b/com/yogpc/qp/client/GuiError.java
@@ -19,35 +19,36 @@
 
 import cpw.mods.fml.relauncher.SideOnly;
 import cpw.mods.fml.relauncher.Side;
-import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiButton;
-import net.minecraft.client.gui.GuiErrorScreen;
 import net.minecraft.client.gui.GuiScreen;
+import net.minecraft.client.gui.GuiSmallButton;
+import net.minecraft.util.StatCollector;
 
 @SideOnly(Side.CLIENT)
-public class GuiError extends GuiErrorScreen {
-	private GuiScreen parent;
+public class GuiError extends GuiScreenA {
+	private String message1, message2;
 
 	public GuiError(GuiScreen par1GuiScreen, String par2Str, String par3Str) {
-		super(par2Str, par3Str);
-		this.parent = par1GuiScreen;
+		super(par1GuiScreen);
+		this.message1 = par2Str;
+		this.message2 = par3Str;
 	}
 
 	@Override
 	protected void actionPerformed(GuiButton par1GuiButton) {
-		Minecraft.getMinecraft().displayGuiScreen(this.parent);
+		showParent();
 	}
 
 	@Override
-	public boolean doesGuiPauseGame() {
-		return false;
+	public void initGui() {
+		this.controlList.add(new GuiSmallButton(0, this.width / 2 - 75, this.height / 6 + 96, StatCollector.translateToLocal("gui.done")));
 	}
 
 	@Override
-	public void updateScreen() {
-		super.updateScreen();
-		if (!this.mc.thePlayer.isEntityAlive() || this.mc.thePlayer.isDead) {
-			this.mc.thePlayer.closeScreen();
-		}
+	public void drawScreen(int par1, int par2, float par3) {
+		this.drawDefaultBackground();
+		this.drawCenteredString(this.fontRenderer, this.message1, this.width / 2, 70, 0xFFFFFF);
+		this.drawCenteredString(this.fontRenderer, this.message2, this.width / 2, 90, 0xFFFFFF);
+		super.drawScreen(par1, par2, par3);
 	}
 }
--- a/com/yogpc/qp/client/GuiInfMJSrc.java
+++ b/com/yogpc/qp/client/GuiInfMJSrc.java
@@ -107,7 +107,7 @@
 	public void drawScreen(int i, int j, float k) {
 		drawDefaultBackground();
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		this.mc.renderEngine.bindTexture(gui);
+		this.mc.renderEngine.bindTexture(this.mc.renderEngine.getTexture(gui));
 		int xb = this.width - 176 >> 1;
 		int yb = this.height - 214 >> 1;
 		drawTexturedModalRect(xb, yb, 0, 0, 176, 214);
--- a/com/yogpc/qp/client/GuiMover.java
+++ b/com/yogpc/qp/client/GuiMover.java
@@ -61,7 +61,7 @@
 	@Override
 	protected void drawGuiContainerBackgroundLayer(float f, int i, int j) {
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		this.mc.renderEngine.bindTexture(gui);
+		this.mc.renderEngine.bindTexture(this.mc.renderEngine.getTexture(gui));
 		int l = this.width - this.xSize >> 1;
 		int i1 = this.height - this.ySize >> 1;
 		drawTexturedModalRect(l, i1, 0, 0, this.xSize, this.ySize);
--- a/com/yogpc/qp/client/GuiPlacer.java
+++ b/com/yogpc/qp/client/GuiPlacer.java
@@ -41,7 +41,7 @@
 
 	@Override
 	protected void drawGuiContainerForegroundLayer(int par1, int par2) {
-		String s = this.tile.isInvNameLocalized() ? this.tile.getInvName() : StatCollector.translateToLocal(this.tile.getInvName());
+		String s = StatCollector.translateToLocal(this.tile.getInvName());
 		this.fontRenderer.drawString(s, this.xSize / 2 - this.fontRenderer.getStringWidth(s) / 2, 6, 4210752);
 		this.fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, this.ySize - 96 + 2, 4210752);
 	}
@@ -49,7 +49,7 @@
 	@Override
 	protected void drawGuiContainerBackgroundLayer(float par1, int par2, int par3) {
 		GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-		this.mc.renderEngine.bindTexture(tex);
+		this.mc.renderEngine.bindTexture(this.mc.renderEngine.getTexture(tex));
 		int k = (this.width - this.xSize) / 2;
 		int l = (this.height - this.ySize) / 2;
 		this.drawTexturedModalRect(k, l, 0, 0, this.xSize, this.ySize);
--- a/com/yogpc/qp/client/RenderLaser.java
+++ b/com/yogpc/qp/client/RenderLaser.java
@@ -35,7 +35,7 @@
 		double total = Math.sqrt(dx * dx + dy * dy + dz * dz);
 		GL11.glRotated(360 - (Math.atan2(dz, dx) * 180.0 / Math.PI + 180.0), 0, 1, 0);
 		GL11.glRotated(-Math.atan2(dy, Math.sqrt(total * total - dy * dy)) * 180.0 / Math.PI, 0, 0, 1);
-		tm.bindTexture(tex);
+		tm.bindTexture(tm.getTexture(tex));
 		int i = 0;
 		while (i <= total - 1) {
 			box[b].render(1F / 16);
