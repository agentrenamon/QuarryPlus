--- a/com/yogpc/ip/ItemArmorElectric.java
+++ b/com/yogpc/ip/ItemArmorElectric.java
@@ -30,17 +30,12 @@
   public ItemArmorElectric(final int id) {
     super(id, EnumHelper.addArmorMaterial("ELECTRIC", 33, new int[] {3, 8, 6, 3}, 0), YogpstopLib.proxy
         .addNewArmourRendererPrefix("electric"), 1);
-    setBlockName("electric_armor");
+    setItemName("electric_armor");
     setCreativeTab(CreativeTabs.tabCombat);
     GameRegistry.registerItem(this, "qpArmor");
     setMaxDamage(100);
     setMaxStackSize(1);
-  }
-
-  @Override
-  @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister ir) {
-    this.iconIndex = ir.registerIcon("yogpstop_qp:electric_armor");
+    this.iconIndex = 0;// TODO
   }
 
   private static final double maxFallSpeedOnHover = 0.35;
@@ -48,7 +43,9 @@
   private void useJetpack(final EntityPlayer p, final ItemStack jetpack, final boolean hover) {
     final boolean jumping = YogpstopLib.proxy.getKey(p, ProxyCommon.Key.jump);
     if (jumping || hover && p.motionY < -maxFallSpeedOnHover) {
-      final double charge = ElectricItem.getCharge(jetpack);
+      double charge = 0;
+      if (jetpack.hasTagCompound() && jetpack.getTagCompound().hasKey("charge"))
+        charge = jetpack.getTagCompound().getInteger("charge");
       if (charge <= 0.0)
         return;
       float power = 0.7f;
@@ -138,14 +135,17 @@
       final ItemStack armor, final DamageSource source, final double damage, final int slot) {
     if (source.isUnblockable())
       return new ISpecialArmor.ArmorProperties(0, 0.0, 0);
-    final int damageLimit =
-        (int) Math.min(Integer.MAX_VALUE, 25.0 * ElectricItem.getCharge(armor) / 5000);
+    int charge = 0;
+    if (armor.hasTagCompound() && armor.getTagCompound().hasKey("charge"))
+      charge = armor.getTagCompound().getInteger("charge");
+    final int damageLimit = (int) Math.min(Integer.MAX_VALUE, 25.0 * charge / 5000);
     return new ISpecialArmor.ArmorProperties(0, 0.4 * 0.9, damageLimit);
   }
 
   @Override
   public int getArmorDisplay(final EntityPlayer player, final ItemStack armor, final int slot) {
-    if (ElectricItem.getCharge(armor) >= 5000)
+    if (armor.hasTagCompound() && armor.getTagCompound().hasKey("charge")
+        && armor.getTagCompound().getInteger("charge") >= 5000)
       return (int) Math.round(20.0 * 0.4 * 0.9);
     return 0;
   }
--- a/com/yogpc/mc_lib/APowerTile.java
+++ b/com/yogpc/mc_lib/APowerTile.java
@@ -1,7 +1,6 @@
 package com.yogpc.mc_lib;
 
 import net.minecraft.nbt.NBTTagCompound;
-import net.minecraftforge.common.ForgeDirection;
 import buildcraft.api.power.IPowerReceptor;
 import buildcraft.api.power.IPowerProvider;
 import buildcraft.api.power.PowerFramework;
--- a/com/yogpc/mc_lib/BlockWorkbench.java
+++ b/com/yogpc/mc_lib/BlockWorkbench.java
@@ -48,7 +48,6 @@
             w.spawnEntityInWorld(e);
           }
         }
-      w.func_96440_m(x, y, z, b);
     }
     super.breakBlock(w, x, y, z, b, m);
   }
--- a/com/yogpc/mc_lib/ProxyClient.java
+++ b/com/yogpc/mc_lib/ProxyClient.java
@@ -63,16 +63,16 @@
     if (currentScreen == null || currentScreen.allowUserInput)
       for (final Key k : Key.values())
         if (k.binding instanceof KeyBinding) {
-          if (GameSettings.isKeyDown((KeyBinding) k.binding))
+          if (((KeyBinding) k.binding).pressed)
             this.key |= 1 << k.ordinal();
         } else
           switch (k) {
             case forward:
-              if (GameSettings.isKeyDown(Minecraft.getMinecraft().gameSettings.keyBindForward))
+              if (Minecraft.getMinecraft().gameSettings.keyBindForward.pressed)
                 this.key |= 1 << k.ordinal();
               break;
             case jump:
-              if (GameSettings.isKeyDown(Minecraft.getMinecraft().gameSettings.keyBindJump))
+              if (Minecraft.getMinecraft().gameSettings.keyBindJump.pressed)
                 this.key |= 1 << k.ordinal();
               break;
             default:
--- a/com/yogpc/qp/BlockBreaker.java
+++ b/com/yogpc/qp/BlockBreaker.java
@@ -29,6 +29,7 @@
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.world.World;
 import net.minecraftforge.common.ForgeDirection;
+import buildcraft.core.proxy.CoreProxy;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 
@@ -46,6 +47,10 @@
     setHardness(3.5F);
     setStepSound(soundStoneFootstep);
     setBlockName("BreakerPlus");
+    this.blockIndexInTexture = 96;
+    this.furnaceTopIcon = 97;
+    this.horizontal = 100;
+    this.vectrial = 101;
   }
 
   @Override
@@ -71,11 +76,8 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:plusstone_side");
-    this.furnaceTopIcon = par1IconRegister.registerIcon("yogpstop_qp:plusstone_top");
-    this.horizontal = par1IconRegister.registerIcon("yogpstop_qp:breaker_front_horizontal");
-    this.vectrial = par1IconRegister.registerIcon("yogpstop_qp:breaker_front_vertical");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
@@ -143,10 +145,10 @@
 
   @Override
   public void onBlockPlacedBy(final World world, final int x, final int y, final int z, final EntityLiving ent) {
-    EnchantmentHelper.init((IEnchantableTile) world.getBlockTileEntity(x, y, z),
-        is.getEnchantmentTagList());
+    EnchantmentHelper.init((IEnchantableTile) world.getBlockTileEntity(x, y, z), ent.getHeldItem()
+        .getEnchantmentTagList());
     world.setBlockMetadataWithNotify(x, y, z,
-        BlockPistonBase.determineOrientation(world, x, y, z, ent), 2);
+        BlockPistonBase.determineOrientation(world, x, y, z, (EntityPlayer) ent));
   }
 
   static void setDispenserDefaultDirection(final World w, final int x, final int y, final int z) {
--- a/com/yogpc/qp/BlockFrame.java
+++ b/com/yogpc/qp/BlockFrame.java
@@ -22,12 +22,13 @@
     setSides(true, true, true, true, true, true);
     setHardness(0.5F);
     setTickRandomly(true);
+    this.blockIndexInTexture = 35;
   }
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister ir) {
-    this.blockIndexInTexture = ir.registerIcon("yogpstop_qp:blockFrame");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
--- a/com/yogpc/qp/BlockInfMJSrc.java
+++ b/com/yogpc/qp/BlockInfMJSrc.java
@@ -13,13 +13,12 @@
 
 package com.yogpc.qp;
 
+import net.minecraft.block.Block;
 import net.minecraft.block.BlockContainer;
 import net.minecraft.block.material.Material;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.world.World;
-import cpw.mods.fml.relauncher.Side;
-import cpw.mods.fml.relauncher.SideOnly;
 
 public class BlockInfMJSrc extends BlockContainer {
 
@@ -30,12 +29,7 @@
     setStepSound(soundStoneFootstep);
     setCreativeTab(QuarryPlus.ct);
     setBlockName("InfMJSrc");
-  }
-
-  @Override
-  @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister ir) {
-    this.blockIndexInTexture = ir.registerIcon("portal");
+    this.blockIndexInTexture = Block.portal.blockIndexInTexture;
   }
 
   @Override
--- a/com/yogpc/qp/BlockLaser.java
+++ b/com/yogpc/qp/BlockLaser.java
@@ -30,13 +30,16 @@
 public class BlockLaser extends BlockContainer {
 
   @SideOnly(Side.CLIENT)
-  private int textureTop, textureBottom;
+  private final int textureTop, textureBottom;
 
   public BlockLaser(final int id) {
     super(id, Material.iron);
     setHardness(10F);
     setCreativeTab(QuarryPlus.ct);
     setBlockName("LaserPlus");
+    this.blockIndexInTexture = 112;
+    this.textureBottom = 113;
+    this.textureTop = 114;
   }
 
   @Override
@@ -81,16 +84,14 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:laser_top");
-    this.textureBottom = par1IconRegister.registerIcon("yogpstop_qp:laser_bottom");
-    this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:laser_side");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
   public void onBlockPlacedBy(final World world, final int x, final int y, final int z, final EntityLiving ent) {
     EnchantmentHelper.init((IEnchantableTile) world.getBlockTileEntity(x, y, z),
-        is.getEnchantmentTagList());
+        ent.getHeldItem().getEnchantmentTagList());
   }
 
   private final ArrayList<ItemStack> drop = new ArrayList<ItemStack>();
--- a/com/yogpc/qp/BlockMarker.java
+++ b/com/yogpc/qp/BlockMarker.java
@@ -27,12 +27,17 @@
 import cpw.mods.fml.relauncher.SideOnly;
 
 public class BlockMarker extends BlockContainer {
+  private static final ForgeDirection[] m2fd = new ForgeDirection[] {ForgeDirection.DOWN,
+      ForgeDirection.EAST, ForgeDirection.WEST, ForgeDirection.SOUTH, ForgeDirection.NORTH,
+      ForgeDirection.UP};
+  private static final byte[] s2m = new byte[] {0, 5, 4, 3, 2, 1};
 
   public BlockMarker(final int id) {
     super(id, Material.circuits);
     setLightValue(0.5F);
     setCreativeTab(QuarryPlus.ct);
     setBlockName("MarkerPlus");
+    this.blockIndexInTexture = 16;
   }
 
   @Override
@@ -45,7 +50,7 @@
       final int z) {
     final float w = 0.15F;
     final float h = 0.65F;
-    final ForgeDirection dir = ForgeDirection.getOrientation(world.getBlockMetadata(x, y, z));
+    final ForgeDirection dir = m2fd[world.getBlockMetadata(x, y, z)];
     switch (dir) {
       case DOWN:
         setBlockBounds(0.5F - w, 1F - h, 0.5F - w, 0.5F + w, 1F, 0.5F + w);
@@ -87,14 +92,14 @@
   @Override
   public boolean canPlaceBlockOnSide(final World world, final int x, final int y, final int z,
       final int side) {
-    final ForgeDirection dir = ForgeDirection.getOrientation(side);
+    final ForgeDirection dir =  m2fd[side];
     return world.isBlockSolidOnSide(x - dir.offsetX, y - dir.offsetY, z - dir.offsetZ, dir.getOpposite());
   }
 
   @Override
   public int onBlockPlaced(final World world, final int x, final int y, final int z,
       final int side, final float par6, final float par7, final float par8, final int meta) {
-    return side;
+    return s2m[side];
   }
 
   @Override
@@ -105,7 +110,7 @@
 
   private void dropTorchIfCantStay(final World w, final int x, final int y, final int z) {
     final int m = w.getBlockMetadata(x, y, z);
-    if (!canPlaceBlockOnSide(w, x, y, z, m)) {
+    if (!canPlaceBlockOnSide(w, x, y, z, m2fd[m].ordinal())) {
       dropBlockAsItem(w, x, y, z, m, 0);
       w.setBlock(x, y, z, 0);
     }
@@ -154,7 +159,7 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:marker");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 }
--- a/com/yogpc/qp/BlockMiningWell.java
+++ b/com/yogpc/qp/BlockMiningWell.java
@@ -38,6 +38,11 @@
     setCreativeTab(QuarryPlus.ct);
     setStepSound(soundStoneFootstep);
     setBlockName("MiningWellPlus");
+    this.blockIndexInTexture = 48;
+    this.textureFront = 49;
+    this.textureBack = 50;
+    this.textureTop = 51;
+    this.texW = 52;
   }
 
   @Override
@@ -47,12 +52,8 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.textureFront = par1IconRegister.registerIcon("yogpstop_qp:miningwell_front");
-    this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:miningwell");
-    this.textureBack = par1IconRegister.registerIcon("yogpstop_qp:miningwell_back");
-    this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:miningwell_top");
-    this.texW = par1IconRegister.registerIcon("yogpstop_qp:miningwell_top_w");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
@@ -85,8 +86,8 @@
   public void onBlockPlacedBy(final World w, final int x, final int y, final int z, final EntityLiving el) {
     super.onBlockPlacedBy(w, x, y, z, el);
     final ForgeDirection orientation = get2dOrientation(el.posX, el.posZ, x, z);
-    w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal(), 1);
-    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+    w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal());
+    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
   }
 
   private static ForgeDirection get2dOrientation(final double x1, final double z1, final double x2,
--- a/com/yogpc/qp/BlockMover.java
+++ b/com/yogpc/qp/BlockMover.java
@@ -28,6 +28,9 @@
     setHardness(1.2F);
     setCreativeTab(QuarryPlus.ct);
     setBlockName("EnchantMover");
+    this.blockIndexInTexture = 32;
+    this.textureBottom = 33;
+    this.textureTop = 34;
   }
 
   @Override
@@ -46,10 +49,8 @@
 
   @SideOnly(Side.CLIENT)
   @Override
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:mover");
-    this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:mover_top");
-    this.textureBottom = par1IconRegister.registerIcon("yogpstop_qp:mover_bottom");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
--- a/com/yogpc/qp/BlockPlacer.java
+++ b/com/yogpc/qp/BlockPlacer.java
@@ -28,6 +28,7 @@
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.world.World;
 import net.minecraftforge.common.ForgeDirection;
+import buildcraft.core.proxy.CoreProxy;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 
@@ -46,6 +47,10 @@
     setHardness(3.5F);
     setStepSound(soundStoneFootstep);
     setBlockName("PlacerPlus");
+    this.blockIndexInTexture = 96;
+    this.furnaceTopIcon = 97;
+    this.horizontal = 98;
+    this.vectrial = 99;
   }
 
   @Override
@@ -71,11 +76,8 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:plusstone_side");
-    this.furnaceTopIcon = par1IconRegister.registerIcon("yogpstop_qp:plusstone_top");
-    this.horizontal = par1IconRegister.registerIcon("yogpstop_qp:placer_front_horizontal");
-    this.vectrial = par1IconRegister.registerIcon("yogpstop_qp:placer_front_vertical");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
@@ -188,7 +190,7 @@
   @Override
   public void onBlockPlacedBy(final World par1World, final int par2, final int par3, final int par4, final EntityLiving par5EntityLiving) {
     final int l =
-        BlockPistonBase.determineOrientation(par1World, par2, par3, par4, par5EntityLiving);
+        BlockPistonBase.determineOrientation(par1World, par2, par3, par4, (EntityPlayer) par5EntityLiving);
     par1World.setBlockMetadataWithNotify(par2, par3, par4, l);
   }
 
@@ -229,7 +231,6 @@
         }
       }
 
-      world.func_96440_m(x, y, z, b);
     }
 
     super.breakBlock(world, x, y, z, b, meta);
--- a/com/yogpc/qp/BlockPlainPipe.java
+++ b/com/yogpc/qp/BlockPlainPipe.java
@@ -16,12 +16,13 @@
     this.maxX = 0.75;
     this.maxY = 1.0;
     this.maxZ = 0.75;
+    this.blockIndexInTexture = 36;
   }
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister ir) {
-    this.blockIndexInTexture = ir.registerIcon("yogpstop_qp:blockPlainPipe");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
--- a/com/yogpc/qp/BlockPump.java
+++ b/com/yogpc/qp/BlockPump.java
@@ -29,13 +29,18 @@
 
 public class BlockPump extends BlockContainer {
 
-  private int textureTop, textureBottom, textureSide, texW, texC;
+  private final int textureTop, textureBottom, textureSide, texW, texC;
 
   public BlockPump(final int id) {
     super(id, Material.iron);
     setHardness(5F);
     setCreativeTab(QuarryPlus.ct);
     setBlockName("PumpPlus");
+    this.textureSide = 64;
+    this.textureBottom = 65;
+    this.textureTop = 66;
+    this.texC = 67;
+    this.texW = 68;
   }
 
   @Override
@@ -71,12 +76,8 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:pump_top");
-    this.textureBottom = par1IconRegister.registerIcon("yogpstop_qp:pump_bottom");
-    this.textureSide = par1IconRegister.registerIcon("yogpstop_qp:pump_side");
-    this.texW = par1IconRegister.registerIcon("yogpstop_qp:pump_top_w");
-    this.texC = par1IconRegister.registerIcon("yogpstop_qp:pump_top_c");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   private final ArrayList<ItemStack> drop = new ArrayList<ItemStack>();
@@ -107,7 +108,7 @@
   @Override
   public void onBlockPlacedBy(final World w, final int x, final int y, final int z, final EntityLiving el) {
     super.onBlockPlacedBy(w, x, y, z, el);
-    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
   }
 
   @Override
--- a/com/yogpc/qp/BlockQuarry.java
+++ b/com/yogpc/qp/BlockQuarry.java
@@ -38,6 +38,12 @@
     setStepSound(soundStoneFootstep);
     setCreativeTab(QuarryPlus.ct);
     setBlockName("QuarryPlus");
+    this.blockIndexInTexture = 0;
+    this.textureFront = 1;
+    this.textureTop = 2;
+    this.texNNB = 3;
+    this.texMF = 4;
+    this.texBB = 5;
   }
 
   private final ArrayList<ItemStack> drop = new ArrayList<ItemStack>();
@@ -102,13 +108,8 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister par1IconRegister) {
-    this.blockIndexInTexture = par1IconRegister.registerIcon("yogpstop_qp:quarry");
-    this.textureTop = par1IconRegister.registerIcon("yogpstop_qp:quarry_top");
-    this.textureFront = par1IconRegister.registerIcon("yogpstop_qp:quarry_front");
-    this.texBB = par1IconRegister.registerIcon("yogpstop_qp:quarry_top_bb");
-    this.texNNB = par1IconRegister.registerIcon("yogpstop_qp:quarry_top_nnb");
-    this.texMF = par1IconRegister.registerIcon("yogpstop_qp:quarry_top_mf");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
@@ -120,9 +121,9 @@
   public void onBlockPlacedBy(final World w, final int x, final int y, final int z, final EntityLiving el) {
     super.onBlockPlacedBy(w, x, y, z, el);
     final ForgeDirection orientation = get2dOrientation(el.posX, el.posZ, x, z);
-    w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal(), 1);
+    w.setBlockMetadataWithNotify(x, y, z, orientation.getOpposite().ordinal());
     ((TileQuarry) w.getBlockTileEntity(x, y, z)).requestTicket();
-    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
   }
 
   private static ForgeDirection get2dOrientation(final double x1, final double z1, final double x2,
--- a/com/yogpc/qp/BlockRefinery.java
+++ b/com/yogpc/qp/BlockRefinery.java
@@ -38,12 +38,13 @@
     setHardness(5F);
     setCreativeTab(QuarryPlus.ct);
     setBlockName("RefineryPlus");
+    this.blockIndexInTexture = 17;
   }
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister ir) {
-    this.blockIndexInTexture = ir.registerIcon("yogpstop_qp:refineryDummy");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
@@ -79,11 +80,11 @@
   @Override
   public void onBlockPlacedBy(final World w, final int x, final int y, final int z, final EntityLiving el) {
     super.onBlockPlacedBy(w, x, y, z, el);
-    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), is.getEnchantmentTagList());
+    EnchantmentHelper.init((IEnchantableTile) w.getBlockTileEntity(x, y, z), el.getHeldItem().getEnchantmentTagList());
     final ForgeDirection[] da =
         {ForgeDirection.NORTH, ForgeDirection.EAST, ForgeDirection.SOUTH, ForgeDirection.WEST};
     final int di = MathHelper.floor_double((el.rotationYaw + 45.0) / 90.0) & 3;
-    w.setBlockMetadataWithNotify(x, y, z, da[di].ordinal(), 1);
+    w.setBlockMetadataWithNotify(x, y, z, da[di].ordinal());
   }
 
   private static void consumeItem(final EntityPlayer ep, final ItemStack stack) {
@@ -128,17 +129,17 @@
       final int meta = world.getBlockMetadata(x, y, z);
       switch (ForgeDirection.values()[meta]) {
         case WEST:
-          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.SOUTH.ordinal(), 3);
+          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.SOUTH.ordinal());
           break;
         case EAST:
-          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.NORTH.ordinal(), 3);
+          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.NORTH.ordinal());
           break;
         case NORTH:
-          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.WEST.ordinal(), 3);
+          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.WEST.ordinal());
           break;
         case SOUTH:
         default:
-          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.EAST.ordinal(), 3);
+          world.setBlockMetadataWithNotify(x, y, z, ForgeDirection.EAST.ordinal());
           break;
       }
       return true;
--- a/com/yogpc/qp/EntityLaser.java
+++ b/com/yogpc/qp/EntityLaser.java
@@ -5,10 +5,10 @@
 import net.minecraft.world.World;
 
 public class EntityLaser extends Entity {
-  public static final int DRILL = 0;
-  public static final int DRILL_HEAD = 1;
-  public static final int BLUE_LASER = 2;
-  public static final int RED_LASER = 3;
+  public static final int DRILL = 21;
+  public static final int DRILL_HEAD = 20;
+  public static final int BLUE_LASER = 19;
+  public static final int RED_LASER = 18;
 
   public double iSize, jSize, kSize;
   public final int texture;
--- a/com/yogpc/qp/ItemTool.java
+++ b/com/yogpc/qp/ItemTool.java
@@ -23,7 +23,6 @@
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.nbt.NBTTagList;
 import net.minecraft.world.World;
-import net.minecraftforge.oredict.OreDictionary;
 
 import com.yogpc.mc_lib.PacketHandler;
 import com.yogpc.qp.QuarryPlus.BlockData;
@@ -40,6 +39,9 @@
     setHasSubtypes(true);
     setMaxDamage(0);
     setCreativeTab(QuarryPlus.ct);
+    this.iconIndex = 80;
+    this.ile = 81;
+    this.ils = 82;
   }
 
   @Override
@@ -150,10 +152,8 @@
 
   @Override
   @SideOnly(Side.CLIENT)
-  public void registerIcons(final IconRegister ir) {
-    this.iconIndex = ir.registerIcon("yogpstop_qp:statusChecker");
-    this.ile = ir.registerIcon("yogpstop_qp:listEditor");
-    this.ils = ir.registerIcon("yogpstop_qp:liquidSelector");
+  public String getTextureFile() {
+    return "/mods/yogpstop_qp/textures/textures.png";
   }
 
   @Override
--- a/com/yogpc/qp/PowerManager.java
+++ b/com/yogpc/qp/PowerManager.java
@@ -34,7 +34,7 @@
     if (c.containsKey(name)) {
       Property prop = c.get(name);
       if (prop.getType() == null) {
-        prop = new Property(prop.getName(), prop.getString(), Property.Type.DOUBLE);
+        prop = new Property(prop.getName(), prop.value, Property.Type.DOUBLE);
         c.put(name, prop);
       }
       return prop.getDouble(def);
--- a/com/yogpc/qp/QuarryPlus.java
+++ b/com/yogpc/qp/QuarryPlus.java
@@ -17,19 +17,16 @@
 import net.minecraft.creativetab.CreativeTabs;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
-import net.minecraftforge.client.event.TextureStitchEvent;
 import net.minecraftforge.common.ForgeChunkManager;
 import net.minecraftforge.common.MinecraftForge;
 import net.minecraftforge.common.Configuration;
 import net.minecraftforge.common.Property;
 import net.minecraftforge.event.ForgeSubscribe;
 import net.minecraftforge.event.world.WorldEvent;
-import net.minecraftforge.oredict.OreDictionary;
 
 import com.yogpc.mc_lib.PacketHandler;
 import com.yogpc.mc_lib.WorkbenchRecipe;
 import com.yogpc.mc_lib.YogpstopLib;
-import com.yogpc.qp.client.RenderEntityLaser;
 
 import cpw.mods.fml.client.registry.RenderingRegistry;
 import cpw.mods.fml.common.Mod;
@@ -38,8 +35,6 @@
 import cpw.mods.fml.common.event.FMLPreInitializationEvent;
 import cpw.mods.fml.common.network.NetworkRegistry;
 import cpw.mods.fml.common.registry.GameRegistry;
-import cpw.mods.fml.relauncher.Side;
-import cpw.mods.fml.relauncher.SideOnly;
 
 @Mod(modid = "QuarryPlus", name = "QuarryPlus", version = "{version}",
     dependencies = "required-after:YogpstopLib;after:BuildCraft|Core")
@@ -80,23 +75,6 @@
         l.destructor();
   }
 
-  @ForgeSubscribe
-  @SideOnly(Side.CLIENT)
-  public void loadTextures(final TextureStitchEvent.Pre evt) {
-    if (evt.map.textureType == 0) {
-      final TextureMap map = evt.map;
-      RenderEntityLaser.icons = new int[4];
-      RenderEntityLaser.icons[EntityLaser.DRILL] =
-          map.registerIcon("yogpstop_qp:blockDrillTexture");
-      RenderEntityLaser.icons[EntityLaser.DRILL_HEAD] =
-          map.registerIcon("yogpstop_qp:blockDrillHeadTexture");
-      RenderEntityLaser.icons[EntityLaser.RED_LASER] =
-          map.registerIcon("yogpstop_qp:blockRedLaser");
-      RenderEntityLaser.icons[EntityLaser.BLUE_LASER] =
-          map.registerIcon("yogpstop_qp:blockBlueLaser");
-    }
-  }
-
   @Mod.PreInit
   public void preInit(final FMLPreInitializationEvent event) {
     final Configuration cfg = new Configuration(event.getSuggestedConfigurationFile());
@@ -220,6 +198,8 @@
     proxy.registerTextures();
     PacketHandler.registerStaticHandler(TileMarker.class);
   }
+  
+  public static final int WILDCARD_VALUE = 32767;
 
   public static class BlockData {
     public final String name;
--- a/com/yogpc/qp/TileBasic.java
+++ b/com/yogpc/qp/TileBasic.java
@@ -181,9 +181,12 @@
         iii = ii;
     } else
       iii = ii;
-    if (iii instanceof ISidedInventory)
-      a = ((ISidedInventory) iii).getAccessibleSlotsFromSide(fd.ordinal());
-    else {
+    if (iii instanceof ISidedInventory) {
+      a = new int[((ISidedInventory) iii).getSizeInventorySide(fd)];
+      final int from = ((ISidedInventory) iii).getStartInventorySide(fd);
+      for (int i = 0; i < a.length; i++)
+        a[i] = from + i;
+    } else {
       a = new int[iii.getSizeInventory()];
       for (int i = 0; i < a.length; i++)
         a[i] = i;
@@ -191,11 +194,6 @@
     int moved = 0, buf;
     for (final int i : a) {
       final ItemStack is2 = iii.getStackInSlot(i);
-      if (iii instanceof ISidedInventory) {
-        if (!((ISidedInventory) iii).canInsertItem(i, is2, fd.ordinal()))
-          continue;
-      } else if (!iii.isStackValidForSlot(i, is2))
-        continue;
       if (is2 == null)
         continue;
       if (!is2.isItemEqual(is1))
@@ -426,11 +424,6 @@
   }
 
   @Override
-  public boolean isInvNameLocalized() {
-    return false;
-  }
-
-  @Override
   public int getInventoryStackLimit() {
     return 0;
   }
@@ -448,9 +441,4 @@
 
   @Override
   public void closeChest() {}
-
-  @Override
-  public boolean isStackValidForSlot(final int p_94041_1_, final ItemStack p_94041_2_) {
-    return false;
-  }
 }
--- a/com/yogpc/qp/TileBreaker.java
+++ b/com/yogpc/qp/TileBreaker.java
@@ -96,11 +96,6 @@
   }
 
   @Override
-  public boolean isInvNameLocalized() {
-    return false;
-  }
-
-  @Override
   public int getInventoryStackLimit() {
     return 0;
   }
@@ -118,9 +113,4 @@
 
   @Override
   public void closeChest() {}
-
-  @Override
-  public boolean isStackValidForSlot(final int p_94041_1_, final ItemStack p_94041_2_) {
-    return false;
-  }
 }
--- a/com/yogpc/qp/TilePlacer.java
+++ b/com/yogpc/qp/TilePlacer.java
@@ -79,11 +79,6 @@
   }
 
   @Override
-  public boolean isInvNameLocalized() {
-    return false;
-  }
-
-  @Override
   public int getInventoryStackLimit() {
     return 64;
   }
@@ -101,11 +96,6 @@
   public void closeChest() {}
 
   @Override
-  public boolean isStackValidForSlot(final int i, final ItemStack itemstack) {
-    return true;
-  }
-
-  @Override
   public void readFromNBT(final NBTTagCompound par1NBTTagCompound) {
     super.readFromNBT(par1NBTTagCompound);
     final NBTTagList nbttaglist = par1NBTTagCompound.getTagList("Items");
--- a/com/yogpc/qp/TilePump.java
+++ b/com/yogpc/qp/TilePump.java
@@ -17,6 +17,7 @@
 import java.io.DataOutputStream;
 import java.util.Collection;
 import java.util.LinkedList;
+import java.util.Map.Entry;
 
 import net.minecraft.block.Block;
 import net.minecraft.entity.player.EntityPlayer;
@@ -140,7 +141,7 @@
               this.zCoord + fd.offsetZ);
       if (te instanceof ITankContainer)
         for (final String s : this.mapping[fd.ordinal()]) {
-          pZ = this.liquids.indexOf(LiquidDictionary.getCanonicalLiquid(s));
+          pZ = indexOf(LiquidDictionary.getLiquid(s, 0));
           if (pZ == -1)
             continue;
           fs = this.liquids.get(pZ);
@@ -521,7 +522,7 @@
       for (int i = 0; i < this.liquids.size(); i++)
         ret[i + 1] =
             new StringBuilder().append("    ")
-                .append(LiquidDictionary.findLiquidName(this.liquids.get(i))).append(": ")
+                .append(findLiquidName(this.liquids.get(i))).append(": ")
                 .append(this.liquids.get(i).amount).append("mB").toString();
     } else
       ret[0] = StatCollector.translateToLocal("chat.pumpcontainno");
@@ -560,7 +561,7 @@
   public LiquidStack drain(final ForgeDirection fd, final LiquidStack resource, final boolean doDrain) {
     if (resource == null)
       return null;
-    final int index = this.liquids.indexOf(resource);
+    final int index = indexOf(resource);
     if (index == -1)
       return null;
     final LiquidStack fs = this.liquids.get(index);
@@ -598,10 +599,10 @@
       int index;
       LiquidStack fs;
       for (final String s : this.mapping[fd.ordinal()]) {
-        fs = LiquidDictionary.getCanonicalLiquid(s);
+        fs = LiquidDictionary.getLiquid(s, 0);
         if (fs == null)
           continue;
-        index = this.liquids.indexOf(fs);
+        index = indexOf(fs);
         if (index != -1)
           ret.add(new LiquidTank(this.liquids.get(index), Integer.MAX_VALUE));
         else
@@ -636,7 +637,7 @@
       fs = LiquidDictionary.getLiquid(s, maxDrain);
       if (fs == null)
         continue;
-      index = this.liquids.indexOf(fs);
+      index = indexOf(fs);
       if (index == -1)
         continue;
       return drain(fd, this.liquids.get(index), doDrain);
@@ -679,7 +680,7 @@
       else if ((b == Block.lavaStill || b == Block.lavaMoving) && meta == 0)
         fs = new LiquidStack(Block.lavaStill, LiquidContainerRegistry.BUCKET_VOLUME);
       if (fs != null) {
-        final int index = this.liquids.indexOf(fs);
+        final int index = indexOf(fs);
         if (index != -1)
           this.liquids.get(index).amount += fs.amount;
         else
@@ -737,4 +738,16 @@
     final TileBasic tb = G_connected();
     return tb == null ? 0 : tb.powerRequest();
   }
+
+  private static String findLiquidName(final LiquidStack fs) {
+    for (final Entry<String, LiquidStack> entry : LiquidDictionary.getLiquids().entrySet())
+      if (fs.isLiquidEqual(entry.getValue())) return entry.getKey();
+    return null;
+  }
+
+  private int indexOf(final LiquidStack key) {
+    for (int i = 0; i < this.liquids.size(); i++)
+      if (this.liquids.get(i).isLiquidEqual(key)) return i;
+    return -1;
+  }
 }
--- a/com/yogpc/qp/client/ClientProxy.java
+++ b/com/yogpc/qp/client/ClientProxy.java
@@ -13,6 +13,8 @@
 
 package com.yogpc.qp.client;
 
+import net.minecraftforge.client.MinecraftForgeClient;
+
 import com.yogpc.qp.CommonProxy;
 import com.yogpc.qp.EntityLaser;
 import com.yogpc.qp.TileLaser;
@@ -36,5 +38,7 @@
     RenderingRegistry.registerBlockHandler(RenderLaserBlock.INSTANCE);
     RenderingRegistry.registerBlockHandler(RenderMarker.INSTANCE);
     RenderingRegistry.registerBlockHandler(RenderFrame.INSTANCE);
+    MinecraftForgeClient.preloadTexture("/mods/yogpstop_qp/textures/textures.png");
+    MinecraftForgeClient.preloadTexture("/mods/yogpstop_qp/textures/textures.png");
   }
 }
--- a/com/yogpc/qp/client/GuiError.java
+++ b/com/yogpc/qp/client/GuiError.java
@@ -13,36 +13,38 @@
 
 package com.yogpc.qp.client;
 
-import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiButton;
-import net.minecraft.client.gui.GuiErrorScreen;
 import net.minecraft.client.gui.GuiScreen;
+import net.minecraft.client.gui.GuiSmallButton;
+import net.minecraft.util.StatCollector;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
 
 @SideOnly(Side.CLIENT)
-public class GuiError extends GuiErrorScreen {
-  private final GuiScreen parent;
+public class GuiError extends GuiScreenA {
+  private final String message1, message2;
 
   public GuiError(final GuiScreen par1GuiScreen, final String par2Str, final String par3Str) {
-    super(par2Str, par3Str);
-    this.parent = par1GuiScreen;
+    super(par1GuiScreen);
+    this.message1 = par2Str;
+    this.message2 = par3Str;
   }
 
   @Override
   protected void actionPerformed(final GuiButton par1GuiButton) {
-    Minecraft.getMinecraft().displayGuiScreen(this.parent);
+    showParent();
   }
 
   @Override
-  public boolean doesGuiPauseGame() {
-    return false;
+  public void initGui() {
+    this.controlList.add(new GuiSmallButton(0, this.width / 2 - 75, this.height / 6 + 96, StatCollector.translateToLocal("gui.done")));
   }
 
   @Override
-  public void updateScreen() {
-    super.updateScreen();
-    if (!this.mc.thePlayer.isEntityAlive() || this.mc.thePlayer.isDead)
-      this.mc.thePlayer.closeScreen();
+  public void drawScreen(final int par1, final int par2, final float par3) {
+    drawDefaultBackground();
+    drawCenteredString(this.fontRenderer, this.message1, this.width / 2, 70, 0xFFFFFF);
+    drawCenteredString(this.fontRenderer, this.message2, this.width / 2, 90, 0xFFFFFF);
+    super.drawScreen(par1, par2, par3);
   }
 }
--- a/com/yogpc/qp/client/GuiInfMJSrc.java
+++ b/com/yogpc/qp/client/GuiInfMJSrc.java
@@ -106,7 +106,7 @@
   public void drawScreen(final int i, final int j, final float k) {
     drawDefaultBackground();
     GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-    this.mc.renderEngine.bindTexture(gui);
+    this.mc.renderEngine.bindTexture(this.mc.renderEngine.getTexture(gui));
     final int xb = this.width - 176 >> 1;
     final int yb = this.height - 214 >> 1;
     drawTexturedModalRect(xb, yb, 0, 0, 176, 214);
--- a/com/yogpc/qp/client/GuiMover.java
+++ b/com/yogpc/qp/client/GuiMover.java
@@ -67,7 +67,7 @@
   @Override
   protected void drawGuiContainerBackgroundLayer(final float f, final int i, final int j) {
     GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-    this.mc.renderEngine.bindTexture(gui);
+    this.mc.renderEngine.bindTexture(this.mc.renderEngine.getTexture(gui));
     final int l = this.width - this.xSize >> 1;
     final int i1 = this.height - this.ySize >> 1;
     drawTexturedModalRect(l, i1, 0, 0, this.xSize, this.ySize);
--- a/com/yogpc/qp/client/GuiPlacer.java
+++ b/com/yogpc/qp/client/GuiPlacer.java
@@ -39,9 +39,7 @@
 
   @Override
   protected void drawGuiContainerForegroundLayer(final int par1, final int par2) {
-    final String s =
-        this.tile.isInvNameLocalized() ? this.tile.getInvName() : StatCollector.translateToLocal(this.tile
-            .getInvName());
+    final String s = StatCollector.translateToLocal(this.tile.getInvName());
     this.fontRenderer.drawString(s, this.xSize / 2 - this.fontRenderer.getStringWidth(s) / 2,
         6, 4210752);
     this.fontRenderer.drawString(StatCollector.translateToLocal("container.inventory"), 8, this.ySize - 96 + 2,
@@ -51,7 +49,7 @@
   @Override
   protected void drawGuiContainerBackgroundLayer(final float par1, final int par2, final int par3) {
     GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
-    this.mc.renderEngine.bindTexture(tex);
+    this.mc.renderEngine.bindTexture(this.mc.renderEngine.getTexture(tex));
     final int k = (this.width - this.xSize) / 2;
     final int l = (this.height - this.ySize) / 2;
     drawTexturedModalRect(k, l, 0, 0, this.xSize, this.ySize);
--- a/com/yogpc/qp/client/RenderEntityLaser.java
+++ b/com/yogpc/qp/client/RenderEntityLaser.java
@@ -16,7 +16,6 @@
 
 @SideOnly(Side.CLIENT)
 public class RenderEntityLaser extends Render {
-  public static int[] icons;
   public static RenderEntityLaser INSTANCE = new RenderEntityLaser();
 
   private RenderEntityLaser() {}
@@ -47,10 +46,10 @@
   }
 
   private static void doRender(final RenderEngine tm, final double i, final double j,
-      final double k, final double iSize, final double jSize, final double kSize, final int tex) {
+      final double k, final double iSize, final double jSize, final double kSize, final int texture) {
     GL11.glPushMatrix();
     GL11.glTranslated(i, j, k);
-    tm.bindTexture("/terrain.png");
+    tm.bindTexture(tm.getTexture("/mods/yogpstop_qp/textures/textures.png"));
     final Tessellator t = Tessellator.instance;
     final RenderBlocks rb = new RenderBlocks();
     for (int iBase = 0; iBase < iSize; ++iBase)
@@ -61,9 +60,6 @@
           final double remainZ = kSize - kBase;
           GL11.glPushMatrix();
           GL11.glTranslatef(iBase, jBase, kBase);
-          int texture = icons[tex];
-          if (texture == null)
-            texture = Block.sand.getBlockTextureFromSide(0);
           t.startDrawingQuads();
           rb.setRenderBounds(0, 0, 0, remainX > 1.0 ? 1.0 : remainX, remainY > 1.0 ? 1.0 : remainY,
               remainZ > 1.0 ? 1.0 : remainZ);
--- a/com/yogpc/qp/client/RenderLaser.java
+++ b/com/yogpc/qp/client/RenderLaser.java
@@ -38,7 +38,7 @@
     final double total = Math.sqrt(dx * dx + dy * dy + dz * dz);
     GL11.glRotated(360 - (Math.atan2(dz, dx) * 180.0 / Math.PI + 180.0), 0, 1, 0);
     GL11.glRotated(-Math.atan2(dy, Math.sqrt(total * total - dy * dy)) * 180.0 / Math.PI, 0, 0, 1);
-    tm.bindTexture(tex);
+    tm.bindTexture(tm.getTexture(tex));
     int i = 0;
     while (i <= total - 1) {
       box[b].render(1F / 16);
--- a/com/yogpc/qp/client/RenderMarker.java
+++ b/com/yogpc/qp/client/RenderMarker.java
@@ -146,10 +146,10 @@
     x += 0.5D;
     z += 0.5D;
 
-    double minU = i.getInterpolatedU(7);
-    double minV = i.getInterpolatedV(7);
-    double maxU = i.getInterpolatedU(9);
-    double maxV = i.getInterpolatedV(9);
+    double minU = (((i & 0xF) << 4) + 7) / 256F;
+    double minV = ((i & 0xF0) + 7) / 256F;
+    double maxU = (((i & 0xF) << 4) + 9) / 256F;
+    double maxV = ((i & 0xF0) + 9) / 256F;
 
     tessellator.setBrightness(block
         .getMixedBrightnessForBlock(iblockaccess, xCoord, yCoord, zCoord));
@@ -190,10 +190,10 @@
 
     i = block.getBlockTexture(iblockaccess, xCoord, yCoord, zCoord, 0);
 
-    minU = i.getMinU();
-    maxU = i.getMaxU();
-    minV = i.getMinV();
-    maxV = i.getMaxV();
+    minU = ((i & 0xF) << 4) / 256F;
+    minV = (i & 0xF0) / 256F;
+    maxU = (((i & 0xF) << 4) + 0x10) / 256F;
+    maxV = ((i & 0xF0) + 0x10) / 256F;
 
     if (m == 5 || m == 4 || m == 3 || m == 0) {
       tessellator.addVertexWithUV(x + frontX[m][0][0], y + frontX[m][1][0], z + frontX[m][2][0],
--- a/com/yogpc/qp/client/RenderRefinery.java
+++ b/com/yogpc/qp/client/RenderRefinery.java
@@ -177,7 +177,7 @@
           GL11.glPushMatrix();
           GL11.glTranslatef(tx, ty, tz);
         }
-        bindTextureByName(liquid.getTextureSheet());
+        bindTextureByName(Block.blocksList[liquid.itemID].getTextureFile());
         final ItemStack stack = liquid.asItemStack();
         setColor(stack.getItem().getColorFromItemStack(stack, 0));
         GL11.glCallList(list[(int) (liquid.amount / buf * 99)]);
@@ -196,13 +196,10 @@
       return diplayLists;
     diplayLists = new int[100];
     Block baseBlock;
-    int texture;
     if (fluidStack.itemID > -1) {
       baseBlock = Block.blocksList[fluidStack.itemID];
-      texture = fluidStack.getRenderingIcon();
     } else {
       baseBlock = Block.waterStill;
-      texture = fluidStack.getRenderingIcon();
     }
     GL11.glDisable(GL11.GL_LIGHTING);
     GL11.glDisable(GL11.GL_BLEND);
@@ -214,17 +211,17 @@
       tessellator.startDrawingQuads();
       renderBlocks.setRenderBounds(0.01, 0, 0.01, 0.99, (float) s / 100, 0.99);
       renderBlocks.renderBottomFace(baseBlock, 0, 0, 0,
-          texture != null ? texture : baseBlock.getBlockTextureFromSide(0));
+          baseBlock.getBlockTextureFromSide(0));
       renderBlocks.renderTopFace(baseBlock, 0, 0, 0,
-          texture != null ? texture : baseBlock.getBlockTextureFromSide(1));
+          baseBlock.getBlockTextureFromSide(1));
       renderBlocks.renderEastFace(baseBlock, 0, 0, 0,
-          texture != null ? texture : baseBlock.getBlockTextureFromSide(2));
+          baseBlock.getBlockTextureFromSide(2));
       renderBlocks.renderWestFace(baseBlock, 0, 0, 0,
-          texture != null ? texture : baseBlock.getBlockTextureFromSide(3));
+          baseBlock.getBlockTextureFromSide(3));
       renderBlocks.renderNorthFace(baseBlock, 0, 0, 0,
-          texture != null ? texture : baseBlock.getBlockTextureFromSide(4));
+          baseBlock.getBlockTextureFromSide(4));
       renderBlocks.renderSouthFace(baseBlock, 0, 0, 0,
-          texture != null ? texture : baseBlock.getBlockTextureFromSide(5));
+          baseBlock.getBlockTextureFromSide(5));
       tessellator.draw();
       GL11.glEndList();
     }
